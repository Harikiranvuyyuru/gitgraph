#!/usr/bin/env python

from flask import Flask 
from cqlengine import columns
from cqlengine.models import Model
from cqlengine import connection
from cqlengine.management import sync_table
from cassandra.cluster import Cluster
#class watch(Model):
#    reponame = columns.Text(primary_key=True)
#    watchcount = columns.Integer()
#    def __repr__(self):
#      return '%s %d' % (self.reponame, self.watchcount)

#connection.setup(['127.0.0.1'], "watch_events")
#sync_table(watch)

app = Flask(__name__) 

@app.route("/")
@app.route("/index")  
def hello(): 
  return "Hello World!" 

@app.route("/holla")
def holla():
  return "Holla World!"

@app.route("/api/<month>/")
def api(month):
  return "This is data for " + month

@app.route("/api/<month>/<days>/")
def api_stats(month, days):
  data = int(days) + 10
  if data == 31:
    strng = "There are " + str(data) + " days in " + month
  else:   
    strng = "Check a calendar"
  return strng

@app.route("/cass/")
def hbase_test():
 # class watch(Model):
 #   reponame = columns.Text(primary_key=True)
 #   watchcount = columns.Integer()
 #   def __repr__(self):
  #    return '%s %d' % (self.reponame, self.watchcount)
#  connection.setup(['127.0.0.1'], "watch_events")  
#  sync_table(watch)

#  q = watch.get(reponame='A2')
  cluster = Cluster(contact_points=['127.0.0.1'],)
  session = cluster.connect('watch_events')
  results = session.execute("SELECT * FROM users")
  for x in results: print x.reponame, x.watchcount
  return "Ronak"

if __name__ == "__main__": 
  app.run(host='0.0.0.0', debug=True)

